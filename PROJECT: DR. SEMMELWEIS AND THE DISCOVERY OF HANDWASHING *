#1
# importing modules
# ... YOUR CODE FOR TASK 1 ...
import pandas as pd
# Read datasets/yearly_deaths_by_clinic.csv into yearly
yearly = pd.read_csv('datasets/yearly_deaths_by_clinic.csv')

# Print out yearly
# ... YOUR CODE FOR TASK 1 ...
print(yearly)

#2
# Calculate proportion of deaths per no. births
# ... YOUR CODE FOR TASK 2 ...
yearly['proportion_deaths'] = yearly['deaths']/yearly['births']
# Extract clinic 1 data into yearly1 and clinic 2 data into yearly2
yearly1 = yearly.loc[yearly['clinic'] == 'clinic 1']
yearly2 = yearly.loc[yearly['clinic'] == 'clinic 2']

# Print out yearly1
# ... YOUR CODE FOR TASK 2 ...
print(yearly1)

#3. There is interesting in charting 2 dataframe into 1 graph using ax
# This makes plots appear in the notebook
%matplotlib inline

# Plot yearly proportion of deaths at the two clinics
ax=yearly1.plot(x='year',y='proportion_deaths', label='clinic 1')
yearly2.plot(x='year',y='proportion_deaths', label='clinic 2', ax=ax)
ax.set_ylabel('Proportion deaths')

#4
# Read datasets/monthly_deaths.csv into monthly
monthly = pd.read_csv('datasets/monthly_deaths.csv', parse_dates=['date'])

# Calculate proportion of deaths per no. births
monthly['proportion_deaths'] = monthly['deaths']/monthly['births']

# Print out the first rows in monthly
# ... YOUR CODE FOR TASK 4 ...
print(monthly.head())                      

#5
# Plot monthly proportion of deaths
# ... YOUR CODE FOR TASK 5 ...
ax = monthly.plot(x='date', y='proportion_deaths')
ax.set_ylabel('Proportion deaths')

#6
# Date when handwashing was made mandatory
import pandas as pd
handwashing_start = pd.to_datetime('1847-06-01')

# Split monthly into before and after handwashing_start
before_washing = monthly.loc[monthly['date'] < handwashing_start]
after_washing = monthly.loc[monthly['date'] >= handwashing_start]

# Plot monthly proportion of deaths before and after handwashing
# ... YOUR CODE FOR TASK 6 ...
ax = before_washing.plot(x='date', y='proportion_deaths', label = 'before washing')
after_washing.plot(x='date', y='proportion_deaths', label='after washing', ax=ax)
ax.set_ylabel('Proportion deaths')

#7
# Difference in mean monthly proportion of deaths due to handwashing
before_proportion = before_washing['proportion_deaths']
after_proportion = after_washing['proportion_deaths']
mean_diff = after_proportion.mean()-before_proportion.mean()
mean_diff

#8
# A bootstrap analysis of the reduction of deaths due to handwashing
boot_mean_diff = []
for i in range(3000):
    boot_before = before_proportion.sample(frac=1, replace=True)
    boot_after = after_proportion.sample(frac=1, replace=True)
    boot_mean_diff.append(boot_before.mean() - boot_after.mean())

# Calculating a 95% confidence interval from boot_mean_diff 
confidence_interval = pd.Series(boot_mean_diff).quantile([0.025, 0.975])
confidence_interval
# the result is 2.5 percentile around 6.7% and 97.5 percnetile around 10%. It is saying that within 95% confidence
# interval, proportion of deaths before hand washing is considerably higher than after handwashing.
